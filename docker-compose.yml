version: '3.3'

services:
  zipkin:
    image: openzipkin/zipkin
    container_name: zipkin
    ports:
      - "9411:9411"
    expose:
      - "9411"


  loki:
    image: grafana/loki:2.9.0
    container_name: loki
    ports:
      - "3100:3100"
    command: -config.file=/etc/loki/local-config.yaml

  grafana:
    depends_on:
      - loki
    container_name: grafana
    environment:
      - GF_PATHS_PROVISIONING=/etc/grafana/provisioning
      - GF_AUTH_ANONYMOUS_ENABLED=true
      - GF_AUTH_ANONYMOUS_ORG_ROLE=Admin
    entrypoint:
      - sh
      - -euc
      - |
        mkdir -p /etc/grafana/provisioning/datasources
        cat <<EOF > /etc/grafana/provisioning/datasources/ds.yaml
        apiVersion: 1
        datasources:
        - name: Loki
          type: loki
          access: proxy
          orgId: 1
          url: http://loki:3100
          basicAuth: false
          isDefault: true
          version: 1
          editable: false
        EOF
        /run.sh
    image: grafana/grafana:latest
    ports:
      - "3000:3000"


  ## MySQL Docker Compose Config for Customer services
  mysql-customer:
    image:  mysql:8.0
    container_name: mysql-customer
    restart: always
    environment:
      MYSQL_ROOT_PASSWORD: password
      MYSQL_DATABASE: microservice
    ports:
      - "3306:3306"
    expose:
      - "3306"
    volumes:
      - ./mysql-customer-data:/var/lib/mysql

  mysql-keycloak:
    image: mysql:8.0
    container_name: mysql-keycloak
    restart: always
    environment:
      MYSQL_ROOT_PASSWORD: password
      MYSQL_DATABASE: keycloak
      MYSQL_USER: keycloak
      MYSQL_PASSWORD: password
    ports:
      - "3307:3306"
    expose:
      - "3307"
    volumes:
      - ./mysql-keycloak-data:/var/lib/mysql


  keycloak:
    container_name: keycloak
    image: quay.io/keycloak/keycloak:23.0.1
    command: [ "start-dev", "--import-realm" ]
    ports:
      - "8084:8080"
    expose:
      - "8084"
    environment:
      DB_VENDOR: MYSQL
      DB_ADDR: mysql-keycloak
      DB_DATABASE: keycloak
      DB_PORT: 3307
      DB_USER: keycloak
      DB_PASSWORD: password
      KEYCLOAK_ADMIN: admin
      KEYCLOAK_ADMIN_PASSWORD: admin
      KEYCLOAK_HOSTNAME_PORT: 8084
    volumes:
      - ./realms/:/opt/keycloak/data/import/
    depends_on:
      - mysql-keycloak

  ## Mongo Docker Compose Config for Order and Product services
  mongo:
    container_name: mongo
    image: mongo:latest
    restart: always
    ports:
      - "27017:27017"
    expose:
      - "27017"
    volumes:
      - ./mongo-data:/data/db


  discovery-server:
    build: discovery-server
    container_name: discovery-server
    environment:
      - SPRING_PROFILES_ACTIVE=docker
    ports:
      - "8761:8761"
    expose:
      - "8761"
    restart: on-failure

  api-gateway:
    depends_on:
      - discovery-server
      - zipkin
    build: api-gateway/
    container_name: api-gateway
    environment:
      - SPRING_PROFILES_ACTIVE=docker
    ports:
      - "8080:8080"
    expose:
      - "8080"
    restart: on-failure

  customer-service:
    container_name: customer-service
    depends_on:
      - mysql-customer
      - api-gateway
    build: customer-service/
    environment:
      - SPRING_PROFILES_ACTIVE=docker
      - MYSQL_HOST=mysql-customer
    restart: on-failure

  product-service:
    container_name: product-service
    depends_on:
      - mongo
      - api-gateway
    build: product-service/
    environment:
      - SPRING_PROFILES_ACTIVE=docker
      - MONGO_HOST=mongo
    restart: on-failure



  order-service:
    container_name: order-service
    depends_on:
      - mongo
      - api-gateway
    build: order-service/
    environment:
      - SPRING_PROFILES_ACTIVE=docker
      - MONGO_HOST=mongo
    restart: on-failure




volumes:
  mysql-customer-data:
  mysql-keycloak-data:
  mongo-data:



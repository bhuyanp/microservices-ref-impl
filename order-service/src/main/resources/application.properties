spring.application.name=order-service
server.port=8083

spring.data.mongo.uri=mongodb://test:test@${MONGO_HOST:localhost}:27017/local

management.health.circuitbreakers.enabled=true
management.endpoints.web.exposure.include=*
management.endpoint.health.show-details=always

#Resilinece4j Properties
resilience4j.circuitbreaker.instances.product.registerHealthIndicator=true
resilience4j.circuitbreaker.instances.product.event-consumer-buffer-size=10
resilience4j.circuitbreaker.instances.product.slidingWindowType=COUNT_BASED
resilience4j.circuitbreaker.instances.product.slidingWindowSize=5
resilience4j.circuitbreaker.instances.product.failureRateThreshold=50
resilience4j.circuitbreaker.instances.product.waitDurationInOpenState=5s
resilience4j.circuitbreaker.instances.product.permittedNumberOfCallsInHalfOpenState=3
resilience4j.circuitbreaker.instances.product.automaticTransitionFromOpenToHalfOpenEnabled=true

##Resilience4J Timeout Properties
resilience4j.timelimiter.instances.product.timeoutDuration=4s

##Resilience4J Retry Properties
resilience4j.retry.instances.product.maxAttempts=3
resilience4j.retry.instances.product.waitDuration=5s

##Eureka client config
app.eureka-server=localhost
eureka.client.serviceUrl.port=9761
eureka.client.serviceUrl.defaultZone=http://${app.eureka-server}:${eureka.client.serviceUrl.port}/eureka/
## This is to create a random instance id to allow multiple instances register with eureka
eureka.instance.instance-id=${spring.application.name}-${random.int(1000)}

# All traces should be sent to latency analysis tool
management.tracing.sampling.probability=1.0

# traceID and spanId are predefined MDC keys - we want the logs to include them
logging.pattern.level=%5p [${spring.application.name:},%X{traceId:-},%X{spanId:-}]



version: '3.3'

services:
  zipkin:
    image: openzipkin/zipkin
    container_name: zipkin
    ports:
      - "9411:9411"
    expose:
      - "9411"

  ## MySQL Docker Compose Config for Customer services
  mysql-customer:
    image:  mysql:8.0
    container_name: mysql-customer
    restart: always
    environment:
      MYSQL_ROOT_PASSWORD: password
      MYSQL_DATABASE: microservice
    ports:
      - "3306:3306"
    expose:
      - "3306"
    volumes:
      - ./mysql-customer-data:/var/lib/mysql

  mysql-keycloak:
    image: mysql:8.0
    container_name: mysql-keycloak
    restart: always
    environment:
      MYSQL_ROOT_PASSWORD: password
      MYSQL_DATABASE: keycloak
      MYSQL_USER: keycloak
      MYSQL_PASSWORD: password
    ports:
      - "3307:3306"
    expose:
      - "3307"
    volumes:
      - ./mysql-keycloak-data:/var/lib/mysql


  keycloak:
    container_name: keycloak
    image: quay.io/keycloak/keycloak:23.0.1
    command: [ "start-dev", "--import-realm" ]
    ports:
      - "8084:8080"
    expose:
      - "8084"
    environment:
      DB_VENDOR: MYSQL
      DB_ADDR: mysql-keycloak
      DB_DATABASE: keycloak
      DB_PORT: 3307
      DB_USER: keycloak
      DB_PASSWORD: password
      KEYCLOAK_ADMIN: admin
      KEYCLOAK_ADMIN_PASSWORD: admin
      KEYCLOAK_HOSTNAME_PORT: 8084
    volumes:
      - ./realms/:/opt/keycloak/data/import/
    depends_on:
      - mysql-keycloak


  ## Mongo Docker Compose Config for Order and Product services
  mongo:
    container_name: mongo
    image: mongo:latest
    restart: always
    ports:
      - "27017:27017"
    expose:
      - "27017"
    volumes:
      - ./mongo-data:/data/db









volumes:
  mysql-customer-data:
  mysql-keycloak-data:
  mongo-data: